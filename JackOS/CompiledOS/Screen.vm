function Screen.init 3
push constant 1
neg
pop static 0
push constant 16384
pop static 1
push constant 16
pop local 2
push constant 16
call Array.new 1
pop static 2
push static 2
push constant 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
pop local 0
push constant 1
pop local 1
label Screen.init-1
push local 0
push local 2
lt
not
if-goto Screen.init-2
push local 1
push local 1
add
pop local 1
push static 2
push local 0
add
push local 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto Screen.init-1
label Screen.init-2
push constant 0
return
function Screen.clearScreen 2
push constant 8192
pop local 1
push constant 0
pop local 0
label Screen.clearScreen-1
push local 0
push local 1
lt
not
if-goto Screen.clearScreen-2
push static 1
push local 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
goto Screen.clearScreen-1
label Screen.clearScreen-2
push constant 0
return
function Screen.setColor 0
push argument 0
pop static 0
push constant 0
return
function Screen.drawPixel 4
push constant 32
push argument 1
call Math.multiply 2
push argument 0
push constant 16
call Math.divide 2
add
pop local 0
push constant 16384
push local 0
add
call Memory.peek 1
pop local 1
push argument 0
push argument 0
push constant 16
call Math.divide 2
push constant 16
call Math.multiply 2
sub
pop local 2
push static 2
push local 2
add
pop pointer 1
push that 0
pop local 3
push static 0
not
if-goto Screen.drawPixel-1
push local 1
push local 3
or
pop local 1
goto Screen.drawPixel-2
label Screen.drawPixel-1
push local 1
push local 3
not
and
pop local 1
label Screen.drawPixel-2
push constant 16384
push local 0
add
push local 1
call Memory.poke 2
pop temp 0
push constant 0
return
function Screen.drawLine 9
push argument 0
push argument 2
gt
push argument 1
push argument 3
gt
and
not
if-goto Screen.drawLine-1
push argument 2
push argument 3
push argument 0
push argument 1
call Screen.drawLine 4
pop temp 0
push constant 0
return
goto Screen.drawLine-2
label Screen.drawLine-1
label Screen.drawLine-2
push argument 0
push argument 2
gt
push argument 1
push argument 3
lt
and
not
if-goto Screen.drawLine-3
push argument 2
push argument 3
push argument 0
push argument 1
call Screen.drawLine 4
pop temp 0
push constant 0
return
goto Screen.drawLine-4
label Screen.drawLine-3
label Screen.drawLine-4
push argument 0
push argument 2
eq
not
if-goto Screen.drawLine-5
push argument 0
push argument 1
push argument 2
push argument 3
call Screen.drawVerticalLine 4
pop temp 0
push constant 0
return
goto Screen.drawLine-6
label Screen.drawLine-5
label Screen.drawLine-6
push argument 1
push argument 3
eq
not
if-goto Screen.drawLine-7
push argument 0
push argument 1
push argument 2
push argument 3
call Screen.drawHorizontalLine 4
pop temp 0
push constant 0
return
goto Screen.drawLine-8
label Screen.drawLine-7
label Screen.drawLine-8
push argument 0
pop local 5
push argument 2
push argument 0
sub
pop local 3
push argument 1
pop local 6
push argument 3
push argument 1
sub
pop local 4
push constant 0
pop local 0
push constant 0
pop local 1
push constant 0
pop local 2
push constant 1
pop local 7
push constant 1
pop local 8
push local 3
push constant 0
lt
not
if-goto Screen.drawLine-9
push constant 1
neg
pop local 7
push local 3
neg
pop local 3
goto Screen.drawLine-10
label Screen.drawLine-9
label Screen.drawLine-10
push local 4
push constant 0
lt
not
if-goto Screen.drawLine-11
push constant 1
neg
pop local 8
push local 4
neg
pop local 4
goto Screen.drawLine-12
label Screen.drawLine-11
label Screen.drawLine-12
label Screen.drawLine-13
push local 0
push local 3
lt
push local 1
push local 4
lt
and
push local 0
push local 3
eq
push local 1
push local 4
eq
and
or
not
if-goto Screen.drawLine-14
push local 5
push local 0
add
push local 6
push local 1
add
call Screen.drawPixel 2
pop temp 0
push local 2
push constant 0
lt
not
if-goto Screen.drawLine-15
push local 0
push local 7
add
pop local 0
push local 2
push local 4
add
pop local 2
goto Screen.drawLine-16
label Screen.drawLine-15
push local 1
push local 8
add
pop local 1
push local 2
push local 3
sub
pop local 2
label Screen.drawLine-16
goto Screen.drawLine-13
label Screen.drawLine-14
push constant 0
return
function Screen.drawVerticalLine 1
push argument 1
pop local 0
push argument 1
push argument 3
gt
not
if-goto Screen.drawVerticalLine-1
push argument 2
push argument 3
push argument 0
push argument 1
call Screen.drawVerticalLine 4
pop temp 0
push constant 0
return
goto Screen.drawVerticalLine-2
label Screen.drawVerticalLine-1
label Screen.drawVerticalLine-2
label Screen.drawVerticalLine-3
push local 0
push argument 3
lt
not
if-goto Screen.drawVerticalLine-4
push argument 0
push local 0
call Screen.drawPixel 2
pop temp 0
push local 0
push constant 1
add
pop local 0
goto Screen.drawVerticalLine-3
label Screen.drawVerticalLine-4
push constant 0
return
function Screen.drawHorizontalLine 1
push argument 0
pop local 0
push argument 0
push argument 2
gt
not
if-goto Screen.drawHorizontalLine-1
push argument 2
push argument 3
push argument 0
push argument 1
call Screen.drawHorizontalLine 4
pop temp 0
push constant 0
return
goto Screen.drawHorizontalLine-2
label Screen.drawHorizontalLine-1
label Screen.drawHorizontalLine-2
label Screen.drawHorizontalLine-3
push local 0
push argument 2
lt
not
if-goto Screen.drawHorizontalLine-4
push local 0
push argument 1
call Screen.drawPixel 2
pop temp 0
push local 0
push constant 1
add
pop local 0
goto Screen.drawHorizontalLine-3
label Screen.drawHorizontalLine-4
push constant 0
return
function Screen.drawRectangle 0
push argument 0
push argument 1
push argument 0
push argument 3
call Screen.drawLine 4
pop temp 0
push argument 2
push argument 1
push argument 2
push argument 3
call Screen.drawLine 4
pop temp 0
push argument 0
push argument 1
push argument 2
push argument 1
call Screen.drawLine 4
pop temp 0
push argument 0
push argument 3
push argument 2
push argument 3
call Screen.drawLine 4
pop temp 0
push constant 0
return
function Screen.drawCircle 5
push argument 2
push constant 180
gt
not
if-goto Screen.drawCircle-1
push constant 181
pop local 0
goto Screen.drawCircle-2
label Screen.drawCircle-1
push argument 2
pop local 0
label Screen.drawCircle-2
push local 0
neg
pop local 1
push local 0
push local 0
call Math.multiply 2
pop local 4
label Screen.drawCircle-3
push local 1
push local 0
push constant 1
add
lt
not
if-goto Screen.drawCircle-4
push argument 0
push local 4
push local 1
push local 1
call Math.multiply 2
sub
call Math.sqrt 1
sub
pop local 2
push argument 0
push local 4
push local 1
push local 1
call Math.multiply 2
sub
call Math.sqrt 1
add
pop local 3
push local 2
push argument 1
push local 1
add
push local 3
push argument 1
push local 1
add
call Screen.drawLine 4
pop temp 0
push local 1
push constant 1
add
pop local 1
goto Screen.drawCircle-3
label Screen.drawCircle-4
push constant 0
return
